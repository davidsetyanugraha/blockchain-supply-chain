# Copyright 2018 Cargill Incorporated
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: "2.1"
services:
  intkey-tp-python:
    image: hyperledger/sawtooth-intkey-tp-python:latest
    container_name: sawtooth-intkey-tp-python-default
    depends_on:
      - validator
    entrypoint: intkey-tp-python -vv -C tcp://validator:9704

  shell:
    image: hyperledger/sawtooth-shell:latest
    container_name: sabre-shell
    entrypoint: "bash -c \"\
        while true; \
          do curl -s http://rest-api:9708/state | grep -q head; if [ $$? -eq 0 ]; then break; fi; sleep 0.5; done; \
        sawtooth keygen --force && \
        intkey set C 10 --url http://rest-api:9708 && \
        intkey set B 40 --url http://rest-api:9708 && \
        tail -f /dev/null \
        \""

  build_intkey_add:
    image:  build_intkey_add:${ISOLATION_ID}
    container_name: build_intkey_add
    volumes:
      - .:/project
    entrypoint: "bash -c \"\
        cargo build --target wasm32-unknown-unknown --release && \
        tail -f /dev/null \
        \""
    build:
      context: integration

  build_pike:
    image:  build_pike:${ISOLATION_ID}
    container_name: build_pike
    volumes:
      - .:/project
    entrypoint: "bash -c \"\
        cd /project/contracts/sawtooth-pike/tp && \
        cargo build --target wasm32-unknown-unknown --release && \
        tail -f /dev/null \
        \""
    build:
      context: integration

  build_intkey:
    image:  build_intkey:${ISOLATION_ID}
    container_name: build_intkey
    volumes:
      - .:/project
    entrypoint: "bash -c \"\
        cd /project/contracts/sawtooth-pike/examples/intkey && \
        cargo build --target wasm32-unknown-unknown --release && \
        tail -f /dev/null \
        \""
    build:
      context: integration


  test_sabre:
    image: test_sabre:${ISOLATION_ID}
    container_name: test_sabre
    depends_on:
      - rest-api
    entrypoint: "bash -c \"\
        while true; \
          do curl -s http://rest-api:9708/state | grep -q head; if [ $$? -eq 0 ]; then break; fi; sleep 0.5; done; \
        while true; \
          do if [ -f /project/example/intkey_add/processor/target/wasm32-unknown-unknown/release/intkey-add.wasm ]; then break; fi; sleep 0.5; done; \
        cargo build && \
        cd /project/integration && \
        cargo test -- --nocapture
        \""
    volumes:
      - .:/project
      - ./keys:/root/.sawtooth/keys
    build:
      context: cli
